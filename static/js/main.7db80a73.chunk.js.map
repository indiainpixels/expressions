{"version":3,"sources":["Option.tsx","data.ts","firebase.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Option","children","isPicked","onPicked","onClick","className","classNames","data","hindi","expl_hindi","expl_bengali","bengali","tamil","malayalam","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","emojiBar","App","useState","screen","setScreen","isLoading","setIsLoading","sliderVal","setSliderVal","setHindi","setBengali","setMalayalam","setTamil","nsfw","setNSFW","words","setWords","wordIndex","setWordIndex","wordPicked","setWordPicked","inputs","setInputs","responsesRef","collection","ahead","setTimeout","saveEverything","inps","myinp","obj","Object","fromEntries","map","word","rating","addDoc","localStorage","setItem","JSON","stringify","useEffect","getItem","expRes","parse","alt","src","newWords","lang","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","onChange","e","Number","step","style","fontFamily","textAlign","justifyContent","value","newObj","disabled","sort","a","b","inp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAwBeA,EAhBA,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,SACpC,OACE,wBACEC,QAAS,kBAAMD,KACfE,UAAWC,IACT,kCACCJ,EAEG,qDADA,mDALR,SASGD,KCnBMM,EAAO,CAClBC,MAAO,CACL,QACA,YACA,OACA,QACA,QACA,UACA,SACA,OACA,OACA,OACA,WACA,UACA,QACA,eACA,WACA,aACA,YACA,SACA,QACA,UACA,WACA,YACA,QACA,UACA,WAEFC,WAAY,CACV,UACA,aACA,UACA,OACA,aACA,QACA,YAEFC,aAAc,CAAC,SAAU,UAAW,aACpCC,QAAS,CACP,QACA,aACA,OACA,SACA,aACA,UACA,SACA,QACA,YACA,SACA,OACA,SACA,QACA,YACA,WACA,UAEFC,MAAO,CACL,QACA,UACA,SACA,UACA,WACA,QACA,QACA,WACA,aACA,OACA,SACA,QACA,WACA,QACA,aACA,SACA,UACA,eACA,WAEFC,UAAW,CACT,UACA,OACA,UACA,SACA,cACA,OACA,QACA,aACA,SACA,SACA,aACA,gBACA,QACA,QACA,c,gBCzEEC,EAAMC,YAXW,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMFC,EADJC,YAAaV,G,QCVlBW,EAAW,CACf,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAkWaC,MAjUf,WAAgB,IAAD,EACeC,mBAAS,GADxB,mBACNC,EADM,KACEC,EADF,OAEqBF,oBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGqBJ,mBAAwB,MAH7C,mBAGNK,EAHM,KAGKC,EAHL,OAKaN,oBAAS,GALtB,mBAKNnB,EALM,KAKC0B,EALD,OAMiBP,oBAAS,GAN1B,mBAMNhB,EANM,KAMGwB,EANH,OAOqBR,oBAAS,GAP9B,mBAONd,EAPM,KAOKuB,EAPL,OAQaT,oBAAS,GARtB,mBAQNf,EARM,KAQCyB,EARD,OASWV,oBAAS,GATp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","file":"static/js/main.7db80a73.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype OptionProps = {\n  onPicked: () => void;\n  isPicked: boolean;\n  children: React.ReactNode;\n};\n\nconst Option = ({ children, isPicked, onPicked }: OptionProps) => {\n  return (\n    <button\n      onClick={() => onPicked()}\n      className={classNames(\n        'block px-4 py-2 rounded-md mb-2',\n        !isPicked\n          ? 'bg-white border-2 border-gray-700 text-gray-700'\n          : 'border-2 border-transparent bg-pink-500 text-white'\n      )}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Option;\n","export const data = {\n  hindi: [\n    'Umdaa',\n    'Behtareen',\n    'Mast',\n    'Gazab',\n    'Theek',\n    'Ghatiya',\n    'Bekaar',\n    'Bura',\n    'Waah',\n    'Sahi',\n    'Bhaukaal',\n    'Chalega',\n    'Ajeeb',\n    'Maza aa Gaya',\n    'Kuch bhi',\n    'Khatarnaak',\n    'Zabardast',\n    'Bawaal',\n    'Garda',\n    'Dhaansu',\n    'Tabadtod',\n    'Ek number',\n    'Tagda',\n    'Rapchik',\n    'Jhakkas',\n  ],\n  expl_hindi: [\n    'Chutiya',\n    'Gaand Faad',\n    'Bakchod',\n    'Lund',\n    'Lawda Mera',\n    'Tatti',\n    'Antshant',\n  ],\n  expl_bengali: ['Baaler', 'Jhanter', 'Bokachoda'],\n  bengali: [\n    'Bhalo',\n    'Khub Bhalo',\n    'Besh',\n    'Cholbe',\n    'Theek Ache',\n    'Khaarap',\n    'Faltoo',\n    'Darun',\n    'Osadharon',\n    'Opurbo',\n    'Baje',\n    'Byapok',\n    'Aldai',\n    'Fatafaati',\n    'Motomoti',\n    'Chorom',\n  ],\n  tamil: [\n    'Semma',\n    'Piliral',\n    'Sorgam',\n    'Karumam',\n    'Komattal',\n    'Mosam',\n    'Super',\n    'Merattal',\n    'Pinnitanga',\n    'Mass',\n    'Takkar',\n    'Mokka',\n    'Kandravi',\n    'Blade',\n    'Padu Mokka',\n    'Karmom',\n    'Kevalam',\n    'Thaaru Maaru',\n    'Sirappu',\n  ],\n  malayalam: [\n    'Adipoli',\n    'Kidu',\n    'Kuthara',\n    'Mosham',\n    'Bhayankaram',\n    'Poli',\n    'Kemam',\n    'Thakarppan',\n    'Kollam',\n    'Cheelu',\n    'Thallipoli',\n    'Thattikkoottu',\n    'Thara',\n    'Aakri',\n    'kolloolla',\n  ],\n};\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from '@firebase/firestore';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: 'AIzaSyA7fH5eBNPTw9z6DrSiw2Q3-M4OrkXk_Vc',\n  authDomain: 'expressions-111.firebaseapp.com',\n  projectId: 'expressions-111',\n  storageBucket: 'expressions-111.appspot.com',\n  messagingSenderId: '703836026807',\n  appId: '1:703836026807:web:a195268b4fe1e801335a32',\n  measurementId: 'G-02NFVSRNG5',\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nexport default db;\n","import { useEffect, useState } from 'react';\nimport Slider from 'rc-slider';\nimport './App.css';\nimport classNames from 'classnames';\nimport 'rc-slider/assets/index.css';\nimport Option from './Option';\nimport { data } from './data';\nimport db from './firebase';\nimport { collection, addDoc } from 'firebase/firestore';\n\nconst emojiBar = [\n  '😡',\n  '😖',\n  '😔',\n  '😒',\n  '😑',\n  '😶',\n  '🙂',\n  '😀',\n  '😁',\n  '😍',\n  '😘',\n];\n\ntype Word = {\n  word: string;\n  lang: string;\n};\n\nfunction shuffle(array: Word[]) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n\ntype Input = {\n  word: string;\n  rating: number;\n};\n\nfunction App() {\n  const [screen, setScreen] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [sliderVal, setSliderVal] = useState<number | null>(null);\n\n  const [hindi, setHindi] = useState(false);\n  const [bengali, setBengali] = useState(false);\n  const [malayalam, setMalayalam] = useState(false);\n  const [tamil, setTamil] = useState(false);\n  const [nsfw, setNSFW] = useState(false);\n\n  const [words, setWords] = useState<{ word: string; lang: string }[]>([]);\n  const [wordIndex, setWordIndex] = useState(0);\n  const [wordPicked, setWordPicked] = useState(false);\n\n  const [inputs, setInputs] = useState<Input[]>([]);\n\n  const responsesRef = collection(db, 'responses');\n\n  const ahead = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setScreen(screen + 1);\n      setSliderVal(null);\n      setIsLoading(false);\n    }, 600);\n  };\n\n  const langpickahead = () => {\n    let newWords = [] as Word[];\n    if (hindi) {\n      newWords = [\n        ...newWords,\n        ...data.hindi.map((word) => ({ word, lang: 'hindi' })),\n      ];\n      if (nsfw) {\n        newWords = [\n          ...newWords,\n          ...data.expl_hindi.map((word) => ({ word, lang: 'hindi' })),\n        ];\n      }\n    }\n    if (bengali) {\n      newWords = [\n        ...newWords,\n        ...data.bengali.map((word) => ({ word, lang: 'bengali' })),\n      ];\n      if (nsfw) {\n        newWords = [\n          ...newWords,\n          ...data.expl_bengali.map((word) => ({ word, lang: 'bengali' })),\n        ];\n      }\n    }\n    if (malayalam) {\n      newWords = [\n        ...newWords,\n        ...data.malayalam.map((word) => ({ word, lang: 'malayalam' })),\n      ];\n    }\n    if (tamil) {\n      newWords = [\n        ...newWords,\n        ...data.tamil.map((word) => ({ word, lang: 'tamil' })),\n      ];\n    }\n    shuffle(newWords);\n    setWords(newWords);\n    ahead();\n  };\n\n  const saveEverything = (inps?: Input[]) => {\n    const myinp = inps || inputs;\n    const obj = Object.fromEntries(\n      myinp.map(({ word, rating }) => [word, rating])\n    );\n    addDoc(responsesRef, obj);\n    localStorage.setItem('expressions', 'yes');\n    localStorage.setItem('exp-res', JSON.stringify(myinp));\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('expressions') === 'yes') {\n      const expRes = localStorage.getItem('exp-res');\n      if (expRes) {\n        setInputs(JSON.parse(expRes) as Input[]);\n      }\n      setScreen(4);\n    }\n  }, []);\n\n  const nextWord = () => {\n    if (wordIndex < words.length - 1) {\n      setInputs([\n        ...inputs,\n        {\n          word: words[wordIndex].word,\n          rating: sliderVal,\n        } as Input,\n      ]);\n      setWordIndex(wordIndex + 1);\n      setWordPicked(false);\n      setSliderVal(null);\n    } else {\n      const newObj = [\n        ...inputs,\n        { word: words[wordIndex].word, rating: sliderVal },\n      ];\n      saveEverything(newObj as Input[]);\n      ahead();\n    }\n  };\n\n  const skipWord = () => {\n    if (wordIndex < words.length - 1) {\n      setWordIndex(wordIndex + 1);\n      setWordPicked(false);\n      setSliderVal(null);\n    } else {\n      saveEverything();\n      ahead();\n    }\n  };\n\n  return (\n    <div className={classNames('App bg-white', isLoading && 'loading')}>\n      {screen === 0 && (\n        <div className='heading'>\n          <h1 className='title'>Jhakkas</h1>\n          <p>\n            An experiment to quantify the sentiment of different Indian\n            expressions\n          </p>\n          <button\n            onClick={ahead}\n            className='px-4 py-2 bg-gray-600 hover:bg-gray-800 text-white mt-12 rounded-md'\n          >\n            Let's Go\n          </button>\n          <div className='absolute bottom-0 illus'>\n            <img\n              alt='mast'\n              src='https://c.tenor.com/pwFIRRljBjAAAAAi/mast-%E0%A4%AC%E0%A4%B9%E0%A5%81%E0%A4%A4.gif'\n            />\n          </div>\n        </div>\n      )}\n      {screen === 1 && (\n        <div className='p-4 text-center pt-12'>\n          <div>Which language(s) are you comfortable in?</div>\n          <div className='mt-12 flex flex-col items-center'>\n            <Option onPicked={() => setHindi(!hindi)} isPicked={hindi}>\n              Hindi\n            </Option>\n            <Option onPicked={() => setBengali(!bengali)} isPicked={bengali}>\n              Bengali\n            </Option>\n            <Option onPicked={() => setTamil(!tamil)} isPicked={tamil}>\n              Tamil\n            </Option>\n            <Option\n              onPicked={() => setMalayalam(!malayalam)}\n              isPicked={malayalam}\n            >\n              Malayalam\n            </Option>\n          </div>\n          <div className='mt-6 items-center flex flex-col'>\n            <p className='mb-4'>Should we include NSFW words?</p>\n            <Option onPicked={() => setNSFW(!nsfw)} isPicked={nsfw}>\n              NSFW\n            </Option>\n          </div>\n          <div className='mt-6 items-center flex flex-col'>\n            <button\n              onClick={langpickahead}\n              className='px-4 py-2 bg-gray-600 hover:bg-gray-800 text-white mt-12 rounded-md'\n            >\n              Continue\n            </button>\n          </div>\n        </div>\n      )}\n      {screen === 2 && (\n        <div className='p-4 positi text-center'>\n          <p>\n            <b>This is the positivity slider.</b>\n          </p>\n          <p>Use it to convey the degree of positivity a phrase conveys</p>\n          <p className='mt-4'>\n            <i>0 for extremely negative, 10 for extremely positive</i>\n          </p>\n          <div className='emojocontrol px-4'>\n            <Slider\n              onChange={(e) => {\n                setSliderVal(Number(e / 10));\n              }}\n              step={10}\n            />\n            <div className='emojo'>\n              {sliderVal !== null && (\n                <div\n                  style={{\n                    fontFamily: 'monospace',\n                    textAlign: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <div>{sliderVal}</div>\n                  <div>{emojiBar[sliderVal]}</div>\n                </div>\n              )}\n            </div>\n          </div>\n          {sliderVal !== null && (\n            <button\n              onClick={ahead}\n              className='px-4 py-2 bg-gray-600 hover:bg-gray-800 text-white mt-4 rounded-md'\n            >\n              Proceed\n            </button>\n          )}\n        </div>\n      )}\n      {screen === 3 && (\n        <div className='p-4'>\n          <div\n            className='text-5xl font-bold mb-4 pt-12'\n            style={{ textAlign: 'center' }}\n          >\n            {words[wordIndex].word}\n          </div>\n          <p className='text-center text-sm mb-8'>\n            Language: {words[wordIndex].lang}\n          </p>\n          <div\n            className='text-sm italic text-gray-500'\n            style={{ textAlign: 'center' }}\n          >\n            What degree of positivity from 0 to 10 this expression evokes in\n            you?\n          </div>\n          <div className='emojocontrol px-4'>\n            <Slider\n              onChange={(e) => {\n                setSliderVal(Number(e / 10));\n                setWordPicked(true);\n              }}\n              value={sliderVal ? sliderVal * 10 : 0}\n              step={10}\n            />\n            <div className='emojo'>\n              <div\n                style={{\n                  fontFamily: 'monospace',\n                  textAlign: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <div>{sliderVal || 0}</div>\n                <div>{emojiBar[sliderVal || 0]}</div>\n              </div>\n            </div>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <button\n              onClick={nextWord}\n              disabled={!wordPicked}\n              className={classNames(\n                wordPicked ? 'bg-gray-600 hover:bg-gray-800' : 'bg-gray-200',\n                'px-4 py-2 text-white mt-4 rounded-md'\n              )}\n            >\n              Next\n            </button>\n            <div className='text-center'>\n              <button\n                onClick={skipWord}\n                className={classNames(\n                  'bg-gray-200',\n                  'px-4 py-2 text-black mt-4 rounded-md'\n                )}\n              >\n                Skip\n              </button>\n            </div>\n            {inputs.length > 8 && (\n              <div\n                className='underline mt-12 text-sm'\n                onClick={() => {\n                  saveEverything();\n                  ahead();\n                }}\n              >\n                End Test\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      {screen === 4 && (\n        <div className='p-4'>\n          <div className='text-3xl font-bold mb-4 pt-12'>\n            Your responses were recorded! Thank you for participating!\n          </div>\n          <div>\n            {inputs\n              .sort((a, b) => b.rating - a.rating)\n              .map((inp) => (\n                <div className='flex mb-2 justify-between'>\n                  <div>{inp.word}</div>\n                  <div className='font-bold'>{inp.rating}</div>\n                </div>\n              ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className='bg-white'>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}